import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        /*
Задание. Ввести с консоли sizeOfMatrix - размерность матрицы a [sizeOfMatrix] [sizeOfMatrix]. Задать значения элементов матрицы в
интервале значений от -M до M с помощью генератора случайных чисел (класс Random).
1. Упорядочить строки (столбцы) матрицы в порядке возрастания значений элементов column-го столбца (строки).
4. Найти максимальный элемент в матрице и удалить из матрицы все строки и столбцы, его содержащие
         */

        Random random = new Random();
        Scanner scanner = new Scanner(System.in);

        int sizeOfMatrix;
        int maximumGeneratedNumber;
        int columnToSort;
        int maximumElementOfMatrix;
        int rememberElementOfArray;
        int rememberIndexOfLine;
        int rememberIndexOfColumn;
        int ii; //Да простят меня боги за эти имена
        int jj;
        int k;

        System.out.print("Please print size of matrix: ");
        sizeOfMatrix = scanner.nextInt();

        maximumGeneratedNumber = 100;
        columnToSort = 0;
        maximumElementOfMatrix = 0;
        rememberIndexOfLine = 0;
        rememberIndexOfColumn = 0;
        ii = 0;
        jj = 0;
        k = 0;

        int[][] matrix = new int[sizeOfMatrix][sizeOfMatrix];
        int[][] matrixWithoutMaximum = new int[sizeOfMatrix - 1][sizeOfMatrix - 1];

        System.out.println("Randomly generated matrix of size " +  + sizeOfMatrix + " by " + sizeOfMatrix + ':');
        for (int i = 0; i < sizeOfMatrix; i++) {
            for (int j = 0; j < sizeOfMatrix; j++) {
                matrix[i][j] = random.nextInt(maximumGeneratedNumber);
            }
        }

        for (int i = 0; i < sizeOfMatrix; i++) {
            System.out.println();
            for (int j = 0; j < sizeOfMatrix; j++) {
                System.out.print(matrix[i][j] + "\t");
            }
        }

        // 1. Упорядочить строки матрицы в порядке возрастания значений элементов columnToSort-го столбца.

        for (int i = 0; i < sizeOfMatrix - 1; i++) {
            if (matrix[i][columnToSort] > matrix[i + 1][columnToSort]) {
                for (int j = 0; j < sizeOfMatrix; j++) {
                    rememberElementOfArray = matrix[i][j];
                    matrix[i][j] = matrix[i + 1][j];
                    matrix[i + 1][j] = rememberElementOfArray;
                }
            }
        }

        // 4. Найти максимальный элемент в матрице и удалить из матрицы все строки и столбцы, его содержащие

        for (int i = 0; i < sizeOfMatrix; i++) {
            for (int j = 0; j < sizeOfMatrix; j++) {
                if (matrix[i][j] > maximumElementOfMatrix) {
                    maximumElementOfMatrix = matrix[i][j];
                    rememberIndexOfLine = i;
                    rememberIndexOfColumn = j;
                }
            }
        }

        for (int i = 0; i < sizeOfMatrix; i++) {
            jj = 0;
            if (ii == sizeOfMatrix - 1) {
                ii--;
            }
            for (int j = 0; j < sizeOfMatrix; j++) {
                if (i != rememberIndexOfLine && j != rememberIndexOfColumn) {
                    matrixWithoutMaximum[ii][jj] = matrix[i][j];
                    jj++;
                }
            }
            ii++;
            // цикл if (k < 2) и коэффициент k нужны для того чтобы проверка if (rememberIndexOfLine == 0)
            // сработала всего один раз, иначе будут до конца обоих циклов for перезаписываться
            // элементы строки с индексом 0 массива matrixWithoutMaximum, а остальные строки будут нулевыми
            // также это нужно только для неотсортированного по заданию 1 массива
            if (k < 2) {
                if (rememberIndexOfLine == 0) {
                    ii--;
                    k = 2;
                }
            }
        }


        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println("Matrix is sorted in ascending order of columnToSort element to lines: ");

        for (int i = 0; i < sizeOfMatrix; i++) {
            System.out.println();
            for (int j = 0; j < sizeOfMatrix; j++) {
                System.out.print(matrix[i][j] + "\t");
            }
        }
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println("Maximum element of matrix is " + maximumElementOfMatrix);
        System.out.println("Matrix without column and line containing maximum element: ");

        for (int i = 0; i < sizeOfMatrix - 1; i++) {
            System.out.println();
            for (int j = 0; j < sizeOfMatrix - 1; j++) {
                System.out.print(matrixWithoutMaximum[i][j] + "\t");
            }
        }
    }
}
